<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Network Monitor</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
</head>
<body>
    <%- include('partials/header') %>

    <div class="container mt-4">
        <h1>Network Monitor</h1>
        <table class="table">
            <thead>
                <tr>
                    <th>IP Address & MAC</th>
                    <th>Device Name</th>
                    <th>OS</th>
                    <th>Notifications</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="deviceTable">
                <!-- Devices will be rendered here by the fetchDevices function -->
            </tbody>
        </table>
    </div>

    <%- include('partials/footer') %>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();

        socket.on('deviceUpdated', device => {
            updateDeviceRow(device);
        });

        socket.on('newDeviceDetected', device => {
            addDeviceRow(device);
        });

        function addDeviceRow(device) {
            const row = `
                <tr id="device-${device.id}">
                    <td>${device.ipAddress}<br>${device.macAddress || 'N/A'}</td>
                    <td>${device.deviceName}</td>
                    <td>${device.os}</td>
                    <td>${device.notificationsEnabled ? 'Enabled' : 'Disabled'}</td>
                    <td>
                        <button class="btn btn-primary btn-sm" onclick="editDevice('${device.id}')">Edit</button>
                        <button class="btn btn-danger btn-sm" onclick="deleteDevice('${device.id}')">Delete</button>
                    </td>
                </tr>
            `;
            document.getElementById('deviceTable').insertAdjacentHTML('beforeend', row);
        }

        function fetchDevices() {
            fetch('/devices')
                .then(response => response.json())
                .then(devices => {
                    devices.forEach(device => addDeviceRow(device));
                })
                .catch(error => console.error('Failed to fetch devices:', error));
        }

        function editDevice(id) {
            const newName = prompt('Enter the new device name:');
            if (newName) {
                fetch(`/devices/${id}`, {
                    method: 'PUT',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify({deviceName: newName})
                })
                .then(response => response.json())
                .then(data => {
                    document.querySelector(`#device-${id} td:nth-child(2)`).textContent = newName;
                    console.log('Device updated:', data);
                })
                .catch(error => console.error('Error updating device:', error));
            }
        }

        // Implement the deleteDevice function according to your application's needs
        function deleteDevice(id) {
            if (confirm('Are you sure you want to delete this device?')) {
                fetch(`/devices/${id}`, {method: 'DELETE'})
                    .then(() => {
                        document.querySelector(`#device-${id}`).remove();
                        console.log('Device deleted');
                    })
                    .catch(error => console.error('Error deleting device:', error));
            }
        }

        // Call fetchDevices to populate the table on initial load
        document.addEventListener('DOMContentLoaded', fetchDevices);
    </script>
</body>
</html>
